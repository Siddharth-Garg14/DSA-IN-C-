#include<bits/stdc++.h>
using namespace std;



int count1(vector<int> &arr,int low, int high,int mid)
{
    int n=arr.size();
    int left=low;
    int right=mid+1;
    vector <int> temp;
    int cnt=0;
    
    while(left <= mid  && right <= high)
    {
        if(arr[left] <= arr[right])
        {
            temp.push_back(arr[left]);
            left++;
        }
        else
        {
            temp.push_back(arr[right]);
            right++;
            cnt+=mid-left+1;
        }
    }
    
    while(left<=mid)
    {
        temp.push_back(arr[left]);
        left++;
    }
    
    while(right<=high)
    {
        temp.push_back(arr[right]);
        right++;
    }
    
    for(int i=low;i<=high;i++)
    {
        arr[i]=temp[i-low];
    }
    return cnt;
}

int mergesort(vector<int> &arr,int low,int high)
{
    int cnt=0;
    if(low>=high)
        return cnt;
    int mid=(low+high)/2;
    cnt+=mergesort(arr,low,mid);
    cnt+=mergesort(arr,mid+1,high);
    cnt+=count1(arr,low,high,mid);
    return cnt;
}

int inversion(vector <int> arr,int n)
{
    int cnt=mergesort(arr,0,n-1);
    return cnt;
    
}

int main()
{
    vector<int> a = {5, 4, 3, 2, 1};
    int n = 5;
    int cnt = inversion(a, n);
    cout << "The number of inversions are: "
    << cnt << endl;
    return 0;
}
